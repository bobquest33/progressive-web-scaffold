// Flexbox
// ===
//
// Flexbox and align a row of items with a lot of control. Provides a
// declarative, robust cross-browser way of using flexbox.


// Flexbox root
// ---
//
// Includes gutters, for grid-like functionality.
//
// 1. Remove default styles present on common root elements.
// 2. Ensure in iOS 5 and 6 that flex-direction isn't inherited from
//    any flexbox parents that has flex-direction set to row-reverse

.u-flexbox {
    @include flexbox(true);
}

.u-flexbox-gutters {
    @include flexbox-gutters(true);
}

.u-flexbox-gutters > .u-flex,
.u-flexbox-gutters > .u-flex-shrink {
    @include flexbox-inner-gutters(true);
}


// Align Items
// ---

.u-align-top {
    @include align-top(true);
}

.u-align-center {
    @include align-center(true);
}

.u-align-bottom {
    @include align-bottom(true);
}


// Justify Content
// ---

.u-justify-start {
    @include justify-start(true);
}

.u-justify-end {
    @include justify-end(true);
}

.u-justify-between {
    @include justify-between(true);
}

.u-justify-center {
    @include justify-center(true);
}

.u-justify-around {
    @include justify-around(true);
}


// Flex Direction
// ---

.u-row-reverse {
    @include row-reverse(true);
}


// Flex (Grow)
// ---

.u-flex {
    @include flex(true);
}


// Flex (Shrink)
// ---
//
// Shrink Flexbox items to a minimum size.

.u-flex-shrink {
    @include flex-shrink(true);
}


// Order
// ---
//
// Re-arrange the display order of up to six items. Add additional modifiers in
// your own stylesheet to re-order more.

.u-order-1 {
    @include order-1(true);
}

.u-order-2 {
    @include order-2(true);
}

.u-order-3 {
    @include order-3(true);
}

.u-order-4 {
    @include order-4(true);
}

.u-order-5 {
    @include order-5(true);
}

.u-order-6 {
    @include order-6(true);
}
